---
title: "Lab 3: COVID-19 Wrangling"
subtitle: "Ecosystem Science and Sustainability 330"
author:
  - name: "[Hanna Velicer](https://hvelicer.github.io/)"
    email: "hvelicer@colostate.edu"
format: html

execute: 
  echo: true
---

```{r}
#| include: false
knitr::opts_chunk$set(message = FALSE, warning = FALSE)
```

## Question 1: Public Data 

```{r}
library(tidyverse)
library(flextable)
library(zoo)

data <- read_csv("https://raw.githubusercontent.com/nytimes/covid-19-data/master/us-counties.csv")
```

## Question 2: Daily Summary 

```{r}
my.date <- as.Date("2022-02-01")
my.state <- "Colorado"

colorado_data <- data %>%
  filter(state == "Colorado") %>%
  group_by(county) %>%
  arrange(date) %>%
  mutate(new_cases=cases-lag(cases),
         new_deaths=deaths-lag(deaths)) %>%
  ungroup()

top_cumulative_cases <- colorado_data %>%
  filter(state == my.state, date == my.date) %>%
  select(Date = date, County = county, Cases = cases) %>%
  slice_max(Cases, n = 5)

most_new_cases <- colorado_data %>%
  filter(state == my.state, date == my.date) %>%
  select(Date = date, County = county, Cases = new_cases) %>%
  slice_max(Cases, n = 5)

flextable(top_cumulative_cases) %>%
  set_caption("Top 5 Counties in Colorado with the Most Cumulative COVID Cases")

flextable(most_new_cases) %>%
  set_caption("Top 5 Counties in Colorado with the Most New COVID Cases")
```

## Question 3: Normalizing Data 

```{r}
pop_data <- read.csv('https://www2.census.gov/programs-surveys/popest/datasets/2020-2023/counties/totals/co-est2023-alldata.csv')

# 3.1
pop_data <- pop_data %>%
  filter(COUNTY != 0) %>%
  mutate(fips = paste0(sprintf("%02d", STATE),
                       sprintf("%03d", COUNTY))) %>%
  select(fips, contains("NAME"), contains("2021"))

# 3.2
names(pop_data)
dim(pop_data)
nrow(pop_data)
str(pop_data)
```

#### 3.2
In the dataset, there are 19 columns. The FIP in the population data matches the locations of the fips in the original COVID data. The dimensions of the population dataset is 3144 x 19, which contains more columns than the COVID data.

```{r}
# 3.3
colorado_pop_data <- pop_data %>%
  filter(str_starts(fips, "08"))
range(colorado_pop_data$POPESTIMATE2021)
```

#### 3.3
The range of populations seen in Colorado counties in 2021: 741 to 737,287.

```{r}
merged_data <- 
  left_join(colorado_data, pop_data, by="fips")

# 3.4 
pop_data <- pop_data %>%
  rename(state = STNAME)

per_capita = inner_join(colorado_data,
                    select(pop_data, fips, pop = POPESTIMATE2021),
                    by = 'fips') %>%
  filter(date == my.date) %>%
  mutate(cumulative_percap = cases / pop,
         newcases_percap = new_cases / pop, 
         newdeaths_percap = new_deaths / pop)

per_capita_totals <- per_capita %>%
  summarize(totalcumulativecases = sum(cumulative_percap),
            totalnewcases = sum(newcases_percap),
            totalnewdeaths = sum(newdeaths_percap))

# 3.5
top_cumulative_cases_per_capita <- per_capita %>%
  arrange(desc(cumulative_percap)) %>%
  select(county, cumulative_percap) %>%
  slice(1:5)

flextable(top_cumulative_cases_per_capita) %>%
  set_caption("Top 5 Counties in Colorado with the Most Cumulative COVID Cases Per Capita on 2021-01-01")

top_per_capita_new_cases <- per_capita %>%
  arrange(desc(newcases_percap)) %>%
  select(county, newcases_percap) %>%
  slice(1:5) 

flextable(top_per_capita_new_cases) %>%
  set_caption("Top 5 Counties in Colorado with the Most New COVID Cases Per Capita on 2021-01-01")
```

## Question 4: Rolling Thresholds 

```{r}
county_cases <- pop_data %>%
  inner_join(colorado_data, by = "fips") %>%
  filter(between(date, my.date - 13, my.date)) %>%
  group_by(county) %>%
  summarize(recent_cases = sum((new_cases/POPESTIMATE2021) * 100000)) %>% 
  ungroup()

recent_county_cases <- county_cases %>%
  arrange(desc(recent_cases)) %>%
  slice(1:5) %>%
  select(county, recent_cases) 

flextable(recent_county_cases) %>%
  set_caption("Top 5 Counties in Colorado with the Most New Cases Per 100,000 Residents in the Past 2 Weeks")
```

## Question 5: Death Toll 

```{r}
county_deaths <- colorado_data %>%
  mutate(year = lubridate::year(date)) %>%
  filter(year == 2021) %>%
  group_by(fips) %>%
  summarize(totaldeaths = sum(new_deaths, na.rm = TRUE)) %>%
  left_join(pop_data, by = c("fips")) %>%
  mutate(
    death_ratio = 100 * (totaldeaths / DEATHS2021)
    ) %>%
  select(CTYNAME, totaldeaths, DEATHS2021, death_ratio) %>%
  filter(death_ratio > 20) 

ggplot(county_deaths) +
  geom_col(aes(x = death_ratio, y = CTYNAME), fill= "blue") +
  theme_bw() + 
  labs(
    title = "Colorado Counties Where COVID Deaths â‰¥ 20% of Total Deaths (2021)",
    x = "County",
    y = "Percentage of Total Deaths from COVID")
```

## Question 6: Multi-state

```{r}
# 6.1
state_data <- data %>%
  group_by(date, state) %>%
  summarize(cases = sum(cases)) %>%
  filter(state %in% c("New York", "Colorado", "Alabama", "Ohio")) %>%
  group_by(state) %>%
  mutate(
    newcases = cases - lag(cases),
    roll = zoo::rollmean(newcases, k = 7, align = "right", fill = NA)
    ) %>%
  ungroup()

# 6.2 
ggplot(state_data, aes(x = date)) +
  geom_col(aes(y = newcases), fill = "steelblue", col = NA) +
  geom_line(aes(y = roll), col = "red", linewidth = 1) +
  theme_bw() +
  facet_wrap(~state, nrow = 2, scales = "free_y") +
  labs(
    title = "Cumulative COVID Cases", 
    x = "Date", 
    y = "Case Count")

# 6.3
state_pop_data <- inner_join(state_data, pop_data, by = "state") %>%
  filter(date == my.date) %>%
  mutate(
    cumulative_percap = cases / POPESTIMATE2021,
    newcases_percap = newcases / POPESTIMATE2021
    )

state_pop_sums <- state_pop_data %>%
  filter(state %in% c("Colorado", "Alabama", "Ohio", "New York")) %>%
  group_by(state) %>%
  summarize(totalcases_percap = sum(newcases_percap, na.rm = TRUE))
print(state_pop_sums)

state_rolling_cases <- state_pop_data %>%
  group_by(date, state) %>%
  filter(state %in% c("Colorado", "Alabama", "Ohio", "New York")) %>%
  group_by(state) %>%
  mutate(
    recentcases_percap = mean(sum(newcases_percap)),
    roll = zoo::rollmean(newcases_percap, k = 7, align = "right", fill = NA)
    ) %>%
  ungroup()

state_rolling_cases <- state_rolling_cases %>%
  select(-CTYNAME)

# 6.4
state_plot = pop_data %>%
  group_by(state) %>%
  summarize(state_pop = sum(POPESTIMATE2021)) %>%
  inner_join(state_data, by = c("state")) %>%
  mutate(per_capita = newcases / state_pop) %>%
  group_by(state) %>%
  mutate(
    roll = zoo::rollmean(per_capita, k = 7, align = "right", fill = NA)
    ) %>%
  ungroup()

ggplot(state_plot, aes(x = date)) +
  geom_line(aes(y = roll, col = state), size = 1) +
  theme_linedraw() +
  labs(
    title = "Cumulative COVID-19 Cases", 
    x = "Date", 
    y = "Case Count") 
```
#### 6.5
Scaling by population had a significant influence on the analysis. It normalized case counts relative to the state size. The 7-day mean was also more accurate for looking at the impact on health on per capita cases.

## Question 7: Space & Time

```{r}
# 7.1 and 7.2
spatialdata = read_csv("https://raw.githubusercontent.com/mikejohnson51/csu-ess-330/refs/heads/main/resources/county-centroids.csv") %>%
  inner_join(data, by = "fips") %>%
  group_by(date) %>%
  summarize(cases_weightedmean_x = sum(LON*cases, na.rm = TRUE) / sum(cases, na.rm = TRUE),
            cases_weightedmean_y = sum(LAT*cases, na.rm = TRUE) / sum(cases, na.rm = TRUE)) %>%
  arrange(date) %>%
  mutate(
    Month = format(date, "%m")
    ) %>%
  mutate(
    d = 1:n()
    )

# 7.3
ggplot(spatialdata) +
  borders("state", fill = "gray90", colour = "white") +
  geom_point(aes(x = cases_weightedmean_x, y = cases_weightedmean_y),
             color = "blue", alpha = 0.25) +
  labs(
    color = "Month",
    size = "Cases",
    x = "Longitude", y = "Latitude",
    title = "Weighted Center of COVID-19 Cases") +
  theme(legend.position = "none") 
```
#### 7.4
The weighted mean center for COVID cases can be seen mainly in the central US. Ranging from Utah to Ohio (with an outlier in Washington), you can see the surge of cases in the midwest in states like Missouri and Indiana. Possible drivers of this movement are local outbreaks in large cities.